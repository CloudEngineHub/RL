ARG BASE_IMAGE=nvcr.io/nvidia/cuda:12.8.1-cudnn-devel-ubuntu24.04
FROM ${BASE_IMAGE} AS base

# It is more convenient for users to run as root
USER root

RUN apt-get update && apt-get install -y --no-install-recommends \
    jq \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# Install uv and python
ARG UV_VERSION=0.7.2
ENV UV_PROJECT_ENVIRONMENT=/opt/nemo_rl_venv
ENV UV_LINK_MODE=copy
ENV PATH="/root/.local/bin:/opt/nemo_rl_venv/bin:$PATH"

WORKDIR /opt/nemo-rl
COPY .python-version pyproject.toml uv.lock nemo_rl/__init__.py nemo_rl/package_info.py ./

RUN curl -LsSf https://astral.sh/uv/${UV_VERSION}/install.sh | sh && \
    uv python install $(cat .python-version) && \
    uv venv ${UV_PROJECT_ENVIRONMENT} && \
    grep "ray\[default\]" pyproject.toml | sed 's/.*"\(.*\)".*/\1/' > ray-constraint.txt && \
    uv pip install -r ray-constraint.txt

# Disable usage stats by default for users who are sensitive to sharing usage.
# Users are encouraged to enable if the wish.
ENV RAY_USAGE_STATS_ENABLED=0

FROM base AS hermetic

COPY --link 3rdparty/ ./3rdparty/

# Variables to control the build of TE. If there are issues with parallelization, consider
# setting these to 1.
ARG MAX_JOBS
ARG NVTE_BUILD_THREADS_PER_JOB

# Create and activate virtual environment
RUN <<"EOF" bash -exu
# uv sync has a more reliable resolver than simple uv pip install which can fail

# Sync each training + inference backend one at a time (since they may conflict)
# to warm the uv cache, then at the end just sync the default dependencies.
# Do everything in one layer to prevent large layers.

# The venv is symlinked to avoid bloating the layer size
uv sync --link-mode symlink --locked --extra vllm --no-install-project
uv sync --link-mode symlink --locked --extra mcore --no-install-project --no-build-isolation
uv sync --link-mode symlink --locked --all-groups --no-install-project
EOF

FROM hermetic AS release

ARG NEMO_RL_COMMIT
ARG NVIDIA_BUILD_ID
ARG NVIDIA_BUILD_REF
ENV NEMO_RL_COMMIT=${NEMO_RL_COMMIT:-<unknown>}
ENV NVIDIA_BUILD_ID=${NVIDIA_BUILD_ID:-<unknown>}
ENV NVIDIA_BUILD_REF=${NVIDIA_BUILD_REF:-<unknown>}
LABEL com.nvidia.build.id="${NVIDIA_BUILD_ID}"
LABEL com.nvidia.build.ref="${NVIDIA_BUILD_REF}"

COPY . /opt/nemo-rl

# Make hermetic the default target instead of release since that's the recommended container
FROM hermetic
